{"version":3,"sources":["components/comment/styleComment.module.css","components/user/styleUser.module.css","components/commentList/styleCommentList.module.css","components/post/stylePost.module.css","components/postList/stylePostList.module.css","components/post/Post.js","components/postList/PostsList.js","App.js","index.js"],"names":["module","exports","commentBox","commentBody","commentAutor","postAutor","commentListBox","postTitle","postBox","autorBox","postBody","CommentListBox","btn","findText","Post","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","shouComments","checkComments","setState","prevState","react_default","a","createElement","className","stylePost","post","id","body","user","name","React","Component","PostsList","giveFindText","event","text","target","value","toLowerCase","filtersPost","posts","filter","title","indexOf","filterPosts","type","stylePostList","onChange","map","post_Post","key","App","postsWithUser","showList","isLoad","startList","fetch","then","res","json","users","comments","console","log","initArray","getPostsWidthUser","objectSpread","find","userId","comment","postId","postList_PostsList","onClick","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.46c670c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentBox\":\"styleComment_commentBox__6x9XH\",\"commentBody\":\"styleComment_commentBody__3Aisx\",\"commentAutor\":\"styleComment_commentAutor__2UwYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postAutor\":\"styleUser_postAutor__3qNQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentListBox\":\"styleCommentList_commentListBox__2ij0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postTitle\":\"stylePost_postTitle__Ko3gi\",\"postBox\":\"stylePost_postBox__3aKSO\",\"autorBox\":\"stylePost_autorBox__lTb4X\",\"postBody\":\"stylePost_postBody__NI5hX\",\"CommentListBox\":\"stylePost_CommentListBox__1R1hO\",\"btn\":\"stylePost_btn__17Qti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findText\":\"stylePostList_findText__2HJzK\"};","import React from 'react';\r\nimport User from '../user/User';\r\nimport CommentList from '../commentList/CommentList';\r\nimport stylePost from '../post/stylePost.module.css'\r\n\r\nclass Post extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            shouComments: false\r\n        }\r\n\r\n        this.checkComments = () => {\r\n            this.setState((prevState) => ({\r\n                shouComments: !prevState.shouComments,\r\n            }))\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <tr className={stylePost.post}>\r\n                <td>{this.props.post.id}</td>\r\n                <td>{this.props.post.body}</td>\r\n                <td>Comments</td>\r\n                <td>{this.props.post.user.name}</td>\r\n            </tr>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Post","import React from 'react';\r\nimport Post from '../post/Post';\r\nimport stylePostList from '../postList/stylePostList.module.css'\r\n\r\nclass PostsList extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            filterPosts: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            filterPosts: this.props.posts\r\n        })\r\n    }\r\n\r\n    giveFindText = (event) => {\r\n        const text = event.target.value.toLowerCase();\r\n        const filtersPost = this.props.posts.filter((post) => {\r\n            return post.title.indexOf(text) > -1;\r\n        })\r\n        this.setState({\r\n            filterPosts: filtersPost,\r\n        })   \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                filter by title<input type='text' className={stylePostList.findText}\r\n                    onChange={this.giveFindText}\r\n                ></input> \r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Title</th>\r\n                            <th>Comments</th>\r\n                            <th>Author</th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    {this.state.filterPosts.map((post) => {\r\n                        return <Post key={post.id} post={post}/>\r\n                    })}\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n};\r\n\r\nexport default PostsList\r\n\r\n                    ","import React from 'react';\r\nimport './App.css';\r\nimport PostsList from './components/postList/PostsList'\r\n\r\nconst getPosts = () => {\r\n  return fetch('https://jsonplaceholder.typicode.com/posts')\r\n    .then(res => res.json())\r\n};\r\n\r\nconst getUsers = () => {\r\n  return fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(res => res.json())\r\n}\r\n\r\nconst getComments = () => {\r\n  return fetch('https://jsonplaceholder.typicode.com/comments')\r\n    .then(res => res.json())\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      postsWithUser: [],\r\n      showList: false,\r\n      isLoad: false,\r\n    };\r\n\r\n    this.startList = () => {\r\n      this.setState((prevState) => ({\r\n        showList: !prevState.showList,\r\n      }))\r\n    }\r\n\r\n  }\r\n\r\nasync componentDidMount(){\r\n  const posts = await getPosts();\r\n  const users = await getUsers();\r\n  const comments = await getComments();\r\n  console.log('posts', posts)\r\n  console.log('users', users)\r\n  console.log(`comments`, comments)\r\n  const initArray = this.getPostsWidthUser(posts, users, comments)\r\n  this.setState({\r\n    postsWithUser: initArray,\r\n    isLoad: true,\r\n  })\r\n}\r\n\r\ngetPostsWidthUser(posts, users, comments){\r\n  return posts.map((post) => {\r\n    return {\r\n      ...post,\r\n      user: users.find((user) => {\r\n        return user.id === post.userId\r\n      }),\r\n      comments: comments.filter((comment) => {\r\n        return comment.postId === post.id\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\n  render(){\r\n    console.log(this.state.postsWithUser)\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>List of posts</h1>\r\n          {!this.state.showList ? (\r\n            <button onClick={this.startList}>Load List</button>\r\n        ) : (this.state.isLoad ? (\r\n            <PostsList posts={this.state.postsWithUser} />\r\n          ) : (\r\n            <div>Loadin...</div>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}